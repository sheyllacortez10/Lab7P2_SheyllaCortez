/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package lab7p2_sheyllacortez;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Pattern;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;


/**
 *
 * @author DELL
 */
public class CMD extends javax.swing.JFrame {

    /**
     * Creates new form CMD
     */
    public CMD() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMenu_cmd_añadir = new javax.swing.JPopupMenu();
        jMenuItem_load = new javax.swing.JMenuItem();
        jMenuItem_refresh = new javax.swing.JMenuItem();
        jPopupMenu_table = new javax.swing.JPopupMenu();
        jMenuItem_clear = new javax.swing.JMenuItem();
        jPanel1 = new javax.swing.JPanel();
        jTextField_main_comandos = new javax.swing.JTextField();
        jButton_enter = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTree = new javax.swing.JTree();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable = new javax.swing.JTable();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenu4 = new javax.swing.JMenu();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenuItem5 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        jMenuItem6 = new javax.swing.JMenuItem();
        jMenuItem7 = new javax.swing.JMenuItem();

        jMenuItem_load.setText("Load File");
        jMenuItem_load.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_loadActionPerformed(evt);
            }
        });
        jPopupMenu_cmd_añadir.add(jMenuItem_load);

        jMenuItem_refresh.setText("Refresh Trees");
        jMenuItem_refresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_refreshActionPerformed(evt);
            }
        });
        jPopupMenu_cmd_añadir.add(jMenuItem_refresh);

        jMenuItem_clear.setText("Clear");
        jMenuItem_clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_clearActionPerformed(evt);
            }
        });
        jPopupMenu_table.add(jMenuItem_clear);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 102, 102));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        jPanel1.add(jTextField_main_comandos, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 530, 30));

        jButton_enter.setText("Enter");
        jButton_enter.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton_enterMouseClicked(evt);
            }
        });
        jPanel1.add(jButton_enter, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 10, 120, 30));

        javax.swing.tree.DefaultMutableTreeNode treeNode1 = new javax.swing.tree.DefaultMutableTreeNode("CSVs");
        jTree.setModel(new javax.swing.tree.DefaultTreeModel(treeNode1));
        jTree.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTreeMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTree);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, 150, 400));

        jTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "id", "name", "category", "price", "aisle", "bin"
            }
        ));
        jTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTable);

        jPanel1.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 50, 510, 400));

        jMenuBar1.setBackground(new java.awt.Color(255, 255, 255));
        jMenuBar1.setForeground(new java.awt.Color(0, 0, 0));

        jMenu1.setText("File");

        jMenuItem1.setText("New File");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuItem2.setText("Import File");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Window");

        jMenu4.setText("Clear");

        jMenuItem4.setText("Clear Command Line");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem4);

        jMenuItem5.setText("Clear Table");
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem5ActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem5);

        jMenu2.add(jMenu4);

        jMenuItem3.setText("Refresh Tree");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem3);

        jMenuBar1.add(jMenu2);

        jMenu3.setText("Help");

        jMenuItem6.setText("Product Structure");
        jMenuItem6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem6ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem6);

        jMenuItem7.setText("Commands");
        jMenuItem7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem7ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem7);

        jMenuBar1.add(jMenu3);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 466, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTreeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTreeMouseClicked
        //popupmenu
        if (evt.isMetaDown()) {
            jPopupMenu_cmd_añadir.show(evt.getComponent(), evt.getX(), evt.getY());
        }
    }//GEN-LAST:event_jTreeMouseClicked

    private void jButton_enterMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton_enterMouseClicked
        //sacar stringtokenizer
        String comandos = jTextField_main_comandos.getText();
        String[] accion = comandos.split(" ");
        if (accion[0].equals("./load")) {
            //método load
            try {
                load(accion[1]);
            } catch (IOException e) {
                e.printStackTrace();
            }
        } else if (accion[0].equals("./create")) {
            //método crear
            try {
                crear(accion[1]);

            } catch (IOException e) {
                e.printStackTrace();
            }
        } else if (accion[0].equals("./clear")) {
            //clear tabla
            try {
                clear();
            } catch (Exception e) {
                e.printStackTrace();
            }
        } else if (accion[0].equals("./refresh")) {
            //refresh arboles
            try {
                refresh();
            } catch (Exception e) {
                e.printStackTrace();
            }

        } else {
            JOptionPane.showMessageDialog(this, "Comando no válido");
        }
    }//GEN-LAST:event_jButton_enterMouseClicked

    private void jMenuItem_refreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_refreshActionPerformed
        //refresh
        DefaultTreeModel m = (DefaultTreeModel) jTree.getModel();
        DefaultMutableTreeNode c = new DefaultMutableTreeNode("Archivo");
        m.setRoot(c);
        File x = new File("./");
        File[] f = x.listFiles();
        for (File miarchivo : f) {
            if (miarchivo.getName().endsWith(".txt")) {
                c.add(new DefaultMutableTreeNode(miarchivo.getName()));

            }
        }
        jTree.setModel(m);
        m.reload();
    }//GEN-LAST:event_jMenuItem_refreshActionPerformed

    private void jMenuItem_loadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_loadActionPerformed
        JOptionPane.showMessageDialog(this, "no creado");

    }//GEN-LAST:event_jMenuItem_loadActionPerformed

    private void jTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableMouseClicked
        if (evt.isMetaDown()) {
            jPopupMenu_table.show(evt.getComponent(), evt.getX(), evt.getY());
        }
    }//GEN-LAST:event_jTableMouseClicked

    private void jMenuItem_clearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_clearActionPerformed
        clear();
    }//GEN-LAST:event_jMenuItem_clearActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        String nombre = JOptionPane.showInputDialog("Nombre");
        try {
          crear(nombre);
        } catch (IOException ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        //usa txt ademas del nombre
        String nombre = JOptionPane.showInputDialog("Nombre");
        try {
            load(nombre);
        } catch (IOException ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        //line
        
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        refresh();
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem5ActionPerformed
        clear();
    }//GEN-LAST:event_jMenuItem5ActionPerformed

    private void jMenuItem6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem6ActionPerformed
       //ayuda product structure
        JOptionPane.showMessageDialog(this, "El sistema de representación de productos utiliza variables como" +"\n" +
               "\"id\" para la identificación única, \"name\" para el nombre del producto "+ "\n" + 
               " (que puede contener espacios), \"category\" para la categoría (un valor entre 0 y 9),"
               + "\n" + "\"price\" para el precio (número real con dos decimales), \"aisle\" " +
               "\n" + "para el número de pasillo (entero de 3 posiciones), y \"bin\" para la ubicación exacta "+
               "\n" + "en el pasillo (entero de 3 posiciones).");
    }//GEN-LAST:event_jMenuItem6ActionPerformed

    private void jMenuItem7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem7ActionPerformed
        //commands
    }//GEN-LAST:event_jMenuItem7ActionPerformed

    //metodos 
    public void load(String nombre) throws FileNotFoundException, IOException {
        //subir un archivo a la tabla
        //atrapo el modelo
        DefaultTableModel modelo = (DefaultTableModel) jTable.getModel();
        modelo.setRowCount(0);

        //le mando el nombre para que me lo busque el que se llama asi
        FileReader fr = new FileReader(nombre);
        BufferedReader br = new BufferedReader(fr);
        String miline;

        //lo añado a la row
        while ((miline = br.readLine()) != null) {
            String[] info = miline.split(",");
            modelo.addRow(info);
        }

        //cierro
        br.close();
        fr.close();
    }

    public void crear(String nombre) throws IOException {
        //crear el archivo con el nombre
        File archivo = new File(nombre);
        FileWriter fw = new FileWriter(archivo);
        BufferedWriter bw = new BufferedWriter(fw);

        //agarro las filas y columnas de la tabla
        int fila = jTable.getRowCount();
        int columna = jTable.getColumnCount();
        String[][] info = new String[fila][columna];

        //escribo la info
        for (int i = 0; i < fila; i++) {
            for (int j = 0; j < columna; j++) {
                info[i][j] = (String) jTable.getValueAt(i, j);
                bw.write(info[i][j] + ";");
            }
            bw.newLine();
        }
        
        bw.close();
        fw.close();

    }

    public void clear() {
        //vaciar mis casillas sin eliminar rows
        //así puede volver a añadir mas cosas y no las estoy seteando 
        DefaultTableModel modelo2 = (DefaultTableModel) jTable.getModel();
        for (int i = 0; i < modelo2.getRowCount(); i++) {
            for (int j = 0; j < modelo2.getColumnCount(); j++) {
                modelo2.setValueAt("", i, j);
            }
        }
    }

    public void refresh() {
        DefaultTreeModel m = (DefaultTreeModel) jTree.getModel();
        DefaultMutableTreeNode c = new DefaultMutableTreeNode("Archivo");
        m.setRoot(c);
        File x = new File("./");
        File[] f = x.listFiles();
        for (File miarchivo : f) {
            if (miarchivo.getName().endsWith(".txt")) {
                c.add(new DefaultMutableTreeNode(miarchivo.getName()));
            }
        }
        jTree.setModel(m);
        m.reload();
    }

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CMD.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CMD.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CMD.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CMD.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CMD().setVisible(true);
            }
        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton_enter;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JMenuItem jMenuItem7;
    private javax.swing.JMenuItem jMenuItem_clear;
    private javax.swing.JMenuItem jMenuItem_load;
    private javax.swing.JMenuItem jMenuItem_refresh;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPopupMenu jPopupMenu_cmd_añadir;
    private javax.swing.JPopupMenu jPopupMenu_table;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable;
    private javax.swing.JTextField jTextField_main_comandos;
    private javax.swing.JTree jTree;
    // End of variables declaration//GEN-END:variables
    DefaultMutableTreeNode nodoSelected;

}
